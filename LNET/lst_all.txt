#!/bin/bash

LST=lst

DATESTR=`date +%Y%m%d_%k%M`
LOGDIR=/tmp/lst_logs_$DATESTR
mkdir -p $LOGDIR
echo $DATESTR >> $LOGDIR/test.command

TESTCMD="lst add_test --from client --to server --loop 1000000 --distribute 1:1 brw read read write size=1024k
"
echo $TESTCMD >> $LOGDIR/test.command
TESTNAME=1024k_RW_30compute_17storage

# vmstat interval
VM_DELAY=3

# lst stat time interval
LST_DELAY=8

# lst stat duration
LST_DURATION=304

# Sal Compute
CLIENT=149.165.224.[193-222]@tcp
# Ida Compute
#CLIENT=149.165.224.[65-94]@tcp
echo "client $CLIENT" >> $LOGDIR/test.command

# Sal Lustre OSS, MDS
SERVER=149.165.224.[235-250,253]@tcp
# Ida Lustre OSS, MDS
#SERVER=149.165.224.[107-122,125]@tcp
echo "server $SERVER" >> $LOGDIR/test.command


export LST_SESSION=$$

cleanup () {
	trap 0; echo killing $1 ... ; kill -9 $1 || true;
}

prep_test() {
	# create session and groups
	local T_SRV=$1
	local T_CLI=$2

	$LST new_session foobar
	$LST add_group client $T_CLI
	$LST add_group server $T_SRV
}

done_test() {
	local T_NAME=$1

	# run batch
	$LST run
	sleep 1

	# collect outputs
	$LST stat server client > $LOGDIR/$T_NAME.lst &
	LST_PID=$!

	# sleep for a while and kill stat process
	sleep $LST_DURATION
	
	$LST stop
	
	echo "kill lst stat..."
	cleanup $LST_PID

	# end the session
	$LST end_session
}

echo "running $TESTNAME ......"

vmstat $VM_DELAY > $LOGDIR/$TESTNAME.vmstat &
	VMSTAT=$!

prep_test $SERVER $CLIENT

$TESTCMD

done_test $TESTNAME

echo "kill vmstat..."